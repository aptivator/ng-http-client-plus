{"version":3,"sources":["../../src/http-wrappers/http-wrappers.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAqB,QAAQ,CAAC;AAC3C,OAAO,qBAAqB,MAAM,iCAAiC,CAAC;AACpE,OAAO,mBAAmB,MAAQ,6CAA6C,CAAC;AAEhF,eAAe,CAAC,CAAC,MAAM,CAAC,qBAAqB,EAAE,UAAC,KAAK,EAAE,WAAW,EAAE,UAAU;IAC5E,IAAI,WAAW,GAAG,UAAU,KAAK,OAAO,CAAC;IAEzC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,UAAC,KAAK,EAAE,UAAU;QAC7C,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK;YACnB,GAAC,UAAU,IAAG,UAAS,GAAG,EAAE,IAAI,EAAE,OAAO;gBACvC,IAAI,IAAI,GAAG,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;gBAC3E,MAAM,CAAC,CAAA,KAAA,IAAI,CAAC,IAAI,CAAA,CAAC,UAAU,CAAC,WAAI,IAAI,EAAE;;YACxC,CAAC;gBACD,CAAC;;IACL,CAAC,EAAE,KAAK,CAAC,CAAC;AACZ,CAAC,EAAE,EAAE,CAAC,CAAC","file":"http-wrappers.js","sourceRoot":"","sourcesContent":["import * as _                from 'lodash';\nimport httpClientMethodNames from './_lib/http-client-method-names';\nimport requestPreprocessor   from './request-preprocessor/request-preprocessor'; \n\nexport default _.reduce(httpClientMethodNames, (proto, methodNames, methodType) => {\n  let queryMethod = methodType === 'query';\n  \n  return _.reduce(methodNames, (proto, methodName) => {\n    return _.extend(proto, {\n      [methodName]: function(url, body, options) {\n        let args = requestPreprocessor.call(this, url, body, options, queryMethod);\n        return this.http[methodName](...args);\n      }\n    });\n  }, proto);\n}, {});\n"]}